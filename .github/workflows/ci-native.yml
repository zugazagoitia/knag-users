name: ci-native

on:
  push:
    branches: [main,dev]
  pull_request:
    branches: [main]

permissions:
  packages: write

concurrency:
  group: ci-native

jobs:
  test-native:
    runs-on: ubuntu-latest
    env:
      MVN: mvn --show-version --batch-mode
    steps:
      - name: Setup Graalvm
        id: setup-graalvm
        uses: DeLaGuardo/setup-graalvm@master
        with:
          # GraalVM version, no pattern syntax available atm
          graalvm: '21.2.0'
          # Java version, optional, defaults to 'java8'. Available options are 'java8' and 'java11'.
          java: 'java11'
          # Architecture flag, optional, defaults to 'amd64'. Available options are 'amd64' and 'aarch64'. Later is available only for linux runners.
          arch: 'amd64'

      - name: Install native-image component
        run: "gu install native-image"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Maven Cache
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Maven Verify
        run: $MVN clean verify -Pnative

  # Image push happens before native tests when running 'mvn clean verify -Pnative -Dquarkus.container-image.push=true', so decided to split.
  build-native:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: test-native
    runs-on: ubuntu-latest
    env:
      MVN: mvn --show-version --batch-mode
      IMAGE_GROUP: zugazagoitia
    steps:
      - name: Setup Graalvm
        id: setup-graalvm
        uses: DeLaGuardo/setup-graalvm@master
        with:
          # GraalVM version, no pattern syntax available atm
          graalvm: '21.2.0'
          # Java version, optional, defaults to 'java8'. Available options are 'java8' and 'java11'.
          java: 'java11'
          # Architecture flag, optional, defaults to 'amd64'. Available options are 'amd64' and 'aarch64'. Later is available only for linux runners.
          arch: 'amd64'

      - name: Install native-image component
        run: "gu install native-image"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Code Checkout
        uses: actions/checkout@v2

      - name: Maven Cache
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Maven Build and Push to GitHub Container Registry
        run: >-
          $MVN package -Pnative -DskipTests
            -Dquarkus.native.container-build=true
            -Dquarkus.container-image.push=true
            '-Dquarkus.container-image.group='$IMAGE_GROUP
            -Dquarkus.container-image.additional-tags=latest
            -Dquarkus.container-image.registry=ghcr.io
            '-Dquarkus.jib.labels."org.opencontainers.image.revision"='$GITHUB_SHA
